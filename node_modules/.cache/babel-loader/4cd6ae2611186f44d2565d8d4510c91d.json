{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _getIterator = require(\"@babel/runtime-corejs3/core-js/get-iterator\");\n\nvar _Array$isArray2 = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\n\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\n\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\n\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\n\nvar _sliceInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"));\n\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _isInteger = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/number/is-integer\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _filter = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof _Symbol === \"undefined\" || _getIteratorMethod(o) == null) {\n    if (_Array$isArray2(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = _getIterator(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context6;\n\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\n  var n = _sliceInstanceProperty2(_context6 = Object.prototype.toString.call(o)).call(_context6, 8, -1);\n\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar equalObjects = require('./equals').default;\n\nvar decode = require('./decode').default;\n\nvar ParseError = require('./ParseError').default;\n\nvar ParsePolygon = require('./ParsePolygon').default;\n\nvar ParseGeoPoint = require('./ParseGeoPoint').default;\n/**\n * contains -- Determines if an object is contained in a list with special handling for Parse pointers.\n *\n * @param haystack\n * @param needle\n * @private\n * @returns {boolean}\n */\n\n\nfunction contains(haystack, needle) {\n  if (needle && needle.__type && (needle.__type === 'Pointer' || needle.__type === 'Object')) {\n    for (var i in haystack) {\n      var ptr = haystack[i];\n\n      if (typeof ptr === 'string' && ptr === needle.objectId) {\n        return true;\n      }\n\n      if (ptr.className === needle.className && ptr.objectId === needle.objectId) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return (0, _indexOf.default)(haystack).call(haystack, needle) > -1;\n}\n\nfunction transformObject(object) {\n  if (object._toFullJSON) {\n    return object._toFullJSON();\n  }\n\n  return object;\n}\n/**\n * matchesQuery -- Determines if an object would be returned by a Parse Query\n * It's a lightweight, where-clause only implementation of a full query engine.\n * Since we find queries that match objects, rather than objects that match\n * queries, we can avoid building a full-blown query tool.\n *\n * @param className\n * @param object\n * @param objects\n * @param query\n * @private\n * @returns {boolean}\n */\n\n\nfunction matchesQuery(className, object, objects, query) {\n  if (object.className !== className) {\n    return false;\n  }\n\n  var obj = object;\n  var q = query;\n\n  if (object.toJSON) {\n    obj = object.toJSON();\n  }\n\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n\n  obj.className = className;\n\n  for (var field in q) {\n    if (!matchesKeyConstraints(className, obj, objects, field, q[field])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction equalObjectsGeneric(obj, compareTo, eqlFn) {\n  if ((0, _isArray.default)(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      if (eqlFn(obj[i], compareTo)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return eqlFn(obj, compareTo);\n}\n/**\n * Converts human readable relative date string\n * ie: 'in 10 days' to a date relative to now\n *\n * @param {*} text\n * @param {*} now\n * @returns {status,info,result}\n * copied from parse-server/src/Adapters/Storage/Mongo/MongoTransform.js\n */\n\n\nfunction relativeTimeToDate(text) {\n  var now = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Date();\n  text = text.toLowerCase();\n  var parts = text.split(' '); // Filter out whitespace\n\n  parts = (0, _filter.default)(parts).call(parts, function (part) {\n    return part !== '';\n  });\n  var future = parts[0] === 'in';\n  var past = parts[parts.length - 1] === 'ago';\n\n  if (!future && !past && text !== 'now') {\n    return {\n      status: 'error',\n      info: \"Time should either start with 'in' or end with 'ago'\"\n    };\n  }\n\n  if (future && past) {\n    return {\n      status: 'error',\n      info: \"Time cannot have both 'in' and 'ago'\"\n    };\n  } // strip the 'ago' or 'in'\n\n\n  if (future) {\n    parts = (0, _slice.default)(parts).call(parts, 1);\n  } else {\n    // past\n    parts = (0, _slice.default)(parts).call(parts, 0, parts.length - 1);\n  }\n\n  if (parts.length % 2 !== 0 && text !== 'now') {\n    return {\n      status: 'error',\n      info: 'Invalid time string. Dangling unit or number.'\n    };\n  }\n\n  var pairs = [];\n\n  while (parts.length) {\n    pairs.push([parts.shift(), parts.shift()]);\n  }\n\n  var seconds = 0;\n\n  for (var _i = 0, _pairs = pairs; _i < _pairs.length; _i++) {\n    var _pairs$_i = (0, _slicedToArray2.default)(_pairs[_i], 2),\n        num = _pairs$_i[0],\n        interval = _pairs$_i[1];\n\n    var val = Number(num);\n\n    if (!(0, _isInteger.default)(val)) {\n      return {\n        status: 'error',\n        info: \"'\".concat(num, \"' is not an integer.\")\n      };\n    }\n\n    switch (interval) {\n      case 'yr':\n      case 'yrs':\n      case 'year':\n      case 'years':\n        seconds += val * 31536000; // 365 * 24 * 60 * 60\n\n        break;\n\n      case 'wk':\n      case 'wks':\n      case 'week':\n      case 'weeks':\n        seconds += val * 604800; // 7 * 24 * 60 * 60\n\n        break;\n\n      case 'd':\n      case 'day':\n      case 'days':\n        seconds += val * 86400; // 24 * 60 * 60\n\n        break;\n\n      case 'hr':\n      case 'hrs':\n      case 'hour':\n      case 'hours':\n        seconds += val * 3600; // 60 * 60\n\n        break;\n\n      case 'min':\n      case 'mins':\n      case 'minute':\n      case 'minutes':\n        seconds += val * 60;\n        break;\n\n      case 'sec':\n      case 'secs':\n      case 'second':\n      case 'seconds':\n        seconds += val;\n        break;\n\n      default:\n        return {\n          status: 'error',\n          info: \"Invalid interval: '\".concat(interval, \"'\")\n        };\n    }\n  }\n\n  var milliseconds = seconds * 1000;\n\n  if (future) {\n    return {\n      status: 'success',\n      info: 'future',\n      result: new Date(now.valueOf() + milliseconds)\n    };\n  } else if (past) {\n    return {\n      status: 'success',\n      info: 'past',\n      result: new Date(now.valueOf() - milliseconds)\n    };\n  } else {\n    return {\n      status: 'success',\n      info: 'present',\n      result: new Date(now.valueOf())\n    };\n  }\n}\n/**\n * Determines whether an object matches a single key's constraints\n *\n * @param className\n * @param object\n * @param objects\n * @param key\n * @param constraints\n * @private\n * @returns {boolean}\n */\n\n\nfunction matchesKeyConstraints(className, object, objects, key, constraints) {\n  if (constraints === null) {\n    return false;\n  }\n\n  if ((0, _indexOf.default)(key).call(key, '.') >= 0) {\n    // Key references a subobject\n    var keyComponents = key.split('.');\n    var subObjectKey = keyComponents[0];\n    var keyRemainder = (0, _slice.default)(keyComponents).call(keyComponents, 1).join('.');\n    return matchesKeyConstraints(className, object[subObjectKey] || {}, objects, keyRemainder, constraints);\n  }\n\n  var i;\n\n  if (key === '$or') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (key === '$and') {\n    for (i = 0; i < constraints.length; i++) {\n      if (!matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (key === '$nor') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (key === '$relatedTo') {\n    // Bail! We can't handle relational queries locally\n    return false;\n  }\n\n  if (!/^[A-Za-z][0-9A-Za-z_]*$/.test(key)) {\n    throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid Key: \".concat(key));\n  } // Equality (or Array contains) cases\n\n\n  if ((0, _typeof2.default)(constraints) !== 'object') {\n    if ((0, _isArray.default)(object[key])) {\n      var _context;\n\n      return (0, _indexOf.default)(_context = object[key]).call(_context, constraints) > -1;\n    }\n\n    return object[key] === constraints;\n  }\n\n  var compareTo;\n\n  if (constraints.__type) {\n    if (constraints.__type === 'Pointer') {\n      return equalObjectsGeneric(object[key], constraints, function (obj, ptr) {\n        return typeof obj !== 'undefined' && ptr.className === obj.className && ptr.objectId === obj.objectId;\n      });\n    }\n\n    return equalObjectsGeneric(decode(object[key]), decode(constraints), equalObjects);\n  } // More complex cases\n\n\n  for (var condition in constraints) {\n    compareTo = constraints[condition];\n\n    if (compareTo.__type) {\n      compareTo = decode(compareTo);\n    } // is it a $relativeTime? convert to date\n\n\n    if (compareTo['$relativeTime']) {\n      var parserResult = relativeTimeToDate(compareTo['$relativeTime']);\n\n      if (parserResult.status !== 'success') {\n        var _context2;\n\n        throw new ParseError(ParseError.INVALID_JSON, (0, _concat.default)(_context2 = \"bad $relativeTime (\".concat(key, \") value. \")).call(_context2, parserResult.info));\n      }\n\n      compareTo = parserResult.result;\n    } // Compare Date Object or Date String\n\n\n    if (toString.call(compareTo) === '[object Date]' || typeof compareTo === 'string' && new Date(compareTo) !== 'Invalid Date' && !isNaN(new Date(compareTo))) {\n      object[key] = new Date(object[key].iso ? object[key].iso : object[key]);\n    }\n\n    switch (condition) {\n      case '$lt':\n        if (object[key] >= compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$lte':\n        if (object[key] > compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$gt':\n        if (object[key] <= compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$gte':\n        if (object[key] < compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$ne':\n        if (equalObjects(object[key], compareTo)) {\n          return false;\n        }\n\n        break;\n\n      case '$in':\n        if (!contains(compareTo, object[key])) {\n          return false;\n        }\n\n        break;\n\n      case '$nin':\n        if (contains(compareTo, object[key])) {\n          return false;\n        }\n\n        break;\n\n      case '$all':\n        for (i = 0; i < compareTo.length; i++) {\n          var _context3;\n\n          if ((0, _indexOf.default)(_context3 = object[key]).call(_context3, compareTo[i]) < 0) {\n            return false;\n          }\n        }\n\n        break;\n\n      case '$exists':\n        {\n          var propertyExists = typeof object[key] !== 'undefined';\n          var existenceIsRequired = constraints['$exists'];\n\n          if (typeof constraints['$exists'] !== 'boolean') {\n            // The SDK will never submit a non-boolean for $exists, but if someone\n            // tries to submit a non-boolean for $exits outside the SDKs, just ignore it.\n            break;\n          }\n\n          if (!propertyExists && existenceIsRequired || propertyExists && !existenceIsRequired) {\n            return false;\n          }\n\n          break;\n        }\n\n      case '$regex':\n        {\n          if ((0, _typeof2.default)(compareTo) === 'object') {\n            return compareTo.test(object[key]);\n          } // JS doesn't support perl-style escaping\n\n\n          var expString = '';\n          var escapeEnd = -2;\n          var escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q');\n\n          while (escapeStart > -1) {\n            // Add the unescaped portion\n            expString += compareTo.substring(escapeEnd + 2, escapeStart);\n            escapeEnd = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\E', escapeStart);\n\n            if (escapeEnd > -1) {\n              expString += compareTo.substring(escapeStart + 2, escapeEnd).replace(/\\\\\\\\\\\\\\\\E/g, '\\\\E').replace(/\\W/g, '\\\\$&');\n            }\n\n            escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q', escapeEnd);\n          }\n\n          expString += compareTo.substring(Math.max(escapeStart, escapeEnd + 2));\n          var modifiers = constraints.$options || '';\n          modifiers = modifiers.replace('x', '').replace('s', ''); // Parse Server / Mongo support x and s modifiers but JS RegExp doesn't\n\n          var exp = new RegExp(expString, modifiers);\n\n          if (!exp.test(object[key])) {\n            return false;\n          }\n\n          break;\n        }\n\n      case '$nearSphere':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n\n          var distance = compareTo.radiansTo(object[key]);\n          var max = constraints.$maxDistance || Infinity;\n          return distance <= max;\n        }\n\n      case '$within':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n\n          var southWest = compareTo.$box[0];\n          var northEast = compareTo.$box[1];\n\n          if (southWest.latitude > northEast.latitude || southWest.longitude > northEast.longitude) {\n            // Invalid box, crosses the date line\n            return false;\n          }\n\n          return object[key].latitude > southWest.latitude && object[key].latitude < northEast.latitude && object[key].longitude > southWest.longitude && object[key].longitude < northEast.longitude;\n        }\n\n      case '$options':\n        // Not a query type, but a way to add options to $regex. Ignore and\n        // avoid the default\n        break;\n\n      case '$maxDistance':\n        // Not a query type, but a way to add a cap to $nearSphere. Ignore and\n        // avoid the default\n        break;\n\n      case '$select':\n        {\n          var subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n\n          for (var _i2 = 0; _i2 < subQueryObjects.length; _i2 += 1) {\n            var subObject = transformObject(subQueryObjects[_i2]);\n            return equalObjects(object[key], subObject[compareTo.key]);\n          }\n\n          return false;\n        }\n\n      case '$dontSelect':\n        {\n          var _subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n\n          for (var _i3 = 0; _i3 < _subQueryObjects.length; _i3 += 1) {\n            var _subObject = transformObject(_subQueryObjects[_i3]);\n\n            return !equalObjects(object[key], _subObject[compareTo.key]);\n          }\n\n          return false;\n        }\n\n      case '$inQuery':\n        {\n          var _subQueryObjects2 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n\n          for (var _i4 = 0; _i4 < _subQueryObjects2.length; _i4 += 1) {\n            var _subObject2 = transformObject(_subQueryObjects2[_i4]);\n\n            if (object[key].className === _subObject2.className && object[key].objectId === _subObject2.objectId) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n      case '$notInQuery':\n        {\n          var _subQueryObjects3 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n\n          for (var _i5 = 0; _i5 < _subQueryObjects3.length; _i5 += 1) {\n            var _subObject3 = transformObject(_subQueryObjects3[_i5]);\n\n            if (object[key].className === _subObject3.className && object[key].objectId === _subObject3.objectId) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n      case '$containedBy':\n        {\n          var _iterator = _createForOfIteratorHelper(object[key]),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var value = _step.value;\n\n              if (!contains(compareTo, value)) {\n                return false;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          return true;\n        }\n\n      case '$geoWithin':\n        {\n          var _context4;\n\n          var points = (0, _map.default)(_context4 = compareTo.$polygon).call(_context4, function (geoPoint) {\n            return [geoPoint.latitude, geoPoint.longitude];\n          });\n          var polygon = new ParsePolygon(points);\n          return polygon.containsPoint(object[key]);\n        }\n\n      case '$geoIntersects':\n        {\n          var _polygon = new ParsePolygon(object[key].coordinates);\n\n          var point = new ParseGeoPoint(compareTo.$point);\n          return _polygon.containsPoint(point);\n        }\n\n      default:\n        return false;\n    }\n  }\n\n  return true;\n}\n\nfunction validateQuery(query\n/*: any*/\n) {\n  var _context5;\n\n  var q = query;\n\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n\n  var specialQuerykeys = ['$and', '$or', '$nor', '_rperm', '_wperm', '_perishable_token', '_email_verify_token', '_email_verify_token_expires_at', '_account_lockout_expires_at', '_failed_login_count'];\n  (0, _forEach.default)(_context5 = (0, _keys.default)(q)).call(_context5, function (key) {\n    if (q && q[key] && q[key].$regex) {\n      if (typeof q[key].$options === 'string') {\n        if (!q[key].$options.match(/^[imxs]+$/)) {\n          throw new ParseError(ParseError.INVALID_QUERY, \"Bad $options value for query: \".concat(q[key].$options));\n        }\n      }\n    }\n\n    if ((0, _indexOf.default)(specialQuerykeys).call(specialQuerykeys, key) < 0 && !key.match(/^[a-zA-Z][a-zA-Z0-9_\\.]*$/)) {\n      throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid key name: \".concat(key));\n    }\n  });\n}\n\nvar OfflineQuery = {\n  matchesQuery: matchesQuery,\n  validateQuery: validateQuery\n};\nmodule.exports = OfflineQuery;","map":{"version":3,"sources":["/home/phy/portfolio/node_modules/parse/lib/browser/OfflineQuery.js"],"names":["_interopRequireDefault","require","_getIterator","_Array$isArray2","_getIteratorMethod","_Symbol","_Array$from","_sliceInstanceProperty2","_keys","_forEach","_map","_concat","_typeof2","_isInteger","_slicedToArray2","_slice","_filter","_isArray","_indexOf","_createForOfIteratorHelper","o","allowArrayLike","it","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","step","next","_e2","return","minLen","_context6","_arrayLikeToArray","Object","prototype","toString","call","constructor","name","test","arr","len","arr2","Array","equalObjects","default","decode","ParseError","ParsePolygon","ParseGeoPoint","contains","haystack","needle","__type","ptr","objectId","className","transformObject","object","_toFullJSON","matchesQuery","objects","query","obj","q","toJSON","where","field","matchesKeyConstraints","equalObjectsGeneric","compareTo","eqlFn","relativeTimeToDate","text","now","arguments","undefined","Date","toLowerCase","parts","split","part","future","past","status","info","pairs","push","shift","seconds","_i","_pairs","_pairs$_i","num","interval","val","Number","concat","milliseconds","result","valueOf","key","constraints","keyComponents","subObjectKey","keyRemainder","join","INVALID_KEY_NAME","_context","condition","parserResult","_context2","INVALID_JSON","isNaN","iso","_context3","propertyExists","existenceIsRequired","expString","escapeEnd","escapeStart","substring","replace","Math","max","modifiers","$options","exp","RegExp","distance","radiansTo","$maxDistance","Infinity","southWest","$box","northEast","latitude","longitude","subQueryObjects","index","_i2","subObject","_subQueryObjects","_i3","_subObject","_subQueryObjects2","_i4","_subObject2","_subQueryObjects3","_i5","_subObject3","_iterator","_step","_context4","points","$polygon","geoPoint","polygon","containsPoint","_polygon","coordinates","point","$point","validateQuery","_context5","specialQuerykeys","$regex","match","INVALID_QUERY","OfflineQuery","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _getIterator = require(\"@babel/runtime-corejs3/core-js/get-iterator\");\n\nvar _Array$isArray2 = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\n\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\n\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\n\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\n\nvar _sliceInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"));\n\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _isInteger = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/number/is-integer\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _filter = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof _Symbol === \"undefined\" || _getIteratorMethod(o) == null) {\n    if (_Array$isArray2(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = _getIterator(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context6;\n\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n\n  var n = _sliceInstanceProperty2(_context6 = Object.prototype.toString.call(o)).call(_context6, 8, -1);\n\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nvar equalObjects = require('./equals').default;\n\nvar decode = require('./decode').default;\n\nvar ParseError = require('./ParseError').default;\n\nvar ParsePolygon = require('./ParsePolygon').default;\n\nvar ParseGeoPoint = require('./ParseGeoPoint').default;\n/**\n * contains -- Determines if an object is contained in a list with special handling for Parse pointers.\n *\n * @param haystack\n * @param needle\n * @private\n * @returns {boolean}\n */\n\n\nfunction contains(haystack, needle) {\n  if (needle && needle.__type && (needle.__type === 'Pointer' || needle.__type === 'Object')) {\n    for (var i in haystack) {\n      var ptr = haystack[i];\n\n      if (typeof ptr === 'string' && ptr === needle.objectId) {\n        return true;\n      }\n\n      if (ptr.className === needle.className && ptr.objectId === needle.objectId) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return (0, _indexOf.default)(haystack).call(haystack, needle) > -1;\n}\n\nfunction transformObject(object) {\n  if (object._toFullJSON) {\n    return object._toFullJSON();\n  }\n\n  return object;\n}\n/**\n * matchesQuery -- Determines if an object would be returned by a Parse Query\n * It's a lightweight, where-clause only implementation of a full query engine.\n * Since we find queries that match objects, rather than objects that match\n * queries, we can avoid building a full-blown query tool.\n *\n * @param className\n * @param object\n * @param objects\n * @param query\n * @private\n * @returns {boolean}\n */\n\n\nfunction matchesQuery(className, object, objects, query) {\n  if (object.className !== className) {\n    return false;\n  }\n\n  var obj = object;\n  var q = query;\n\n  if (object.toJSON) {\n    obj = object.toJSON();\n  }\n\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n\n  obj.className = className;\n\n  for (var field in q) {\n    if (!matchesKeyConstraints(className, obj, objects, field, q[field])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction equalObjectsGeneric(obj, compareTo, eqlFn) {\n  if ((0, _isArray.default)(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      if (eqlFn(obj[i], compareTo)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return eqlFn(obj, compareTo);\n}\n/**\n * Converts human readable relative date string\n * ie: 'in 10 days' to a date relative to now\n *\n * @param {*} text\n * @param {*} now\n * @returns {status,info,result}\n * copied from parse-server/src/Adapters/Storage/Mongo/MongoTransform.js\n */\n\n\nfunction relativeTimeToDate(text) {\n  var now = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Date();\n  text = text.toLowerCase();\n  var parts = text.split(' '); // Filter out whitespace\n\n  parts = (0, _filter.default)(parts).call(parts, function (part) {\n    return part !== '';\n  });\n  var future = parts[0] === 'in';\n  var past = parts[parts.length - 1] === 'ago';\n\n  if (!future && !past && text !== 'now') {\n    return {\n      status: 'error',\n      info: \"Time should either start with 'in' or end with 'ago'\"\n    };\n  }\n\n  if (future && past) {\n    return {\n      status: 'error',\n      info: \"Time cannot have both 'in' and 'ago'\"\n    };\n  } // strip the 'ago' or 'in'\n\n\n  if (future) {\n    parts = (0, _slice.default)(parts).call(parts, 1);\n  } else {\n    // past\n    parts = (0, _slice.default)(parts).call(parts, 0, parts.length - 1);\n  }\n\n  if (parts.length % 2 !== 0 && text !== 'now') {\n    return {\n      status: 'error',\n      info: 'Invalid time string. Dangling unit or number.'\n    };\n  }\n\n  var pairs = [];\n\n  while (parts.length) {\n    pairs.push([parts.shift(), parts.shift()]);\n  }\n\n  var seconds = 0;\n\n  for (var _i = 0, _pairs = pairs; _i < _pairs.length; _i++) {\n    var _pairs$_i = (0, _slicedToArray2.default)(_pairs[_i], 2),\n        num = _pairs$_i[0],\n        interval = _pairs$_i[1];\n\n    var val = Number(num);\n\n    if (!(0, _isInteger.default)(val)) {\n      return {\n        status: 'error',\n        info: \"'\".concat(num, \"' is not an integer.\")\n      };\n    }\n\n    switch (interval) {\n      case 'yr':\n      case 'yrs':\n      case 'year':\n      case 'years':\n        seconds += val * 31536000; // 365 * 24 * 60 * 60\n\n        break;\n\n      case 'wk':\n      case 'wks':\n      case 'week':\n      case 'weeks':\n        seconds += val * 604800; // 7 * 24 * 60 * 60\n\n        break;\n\n      case 'd':\n      case 'day':\n      case 'days':\n        seconds += val * 86400; // 24 * 60 * 60\n\n        break;\n\n      case 'hr':\n      case 'hrs':\n      case 'hour':\n      case 'hours':\n        seconds += val * 3600; // 60 * 60\n\n        break;\n\n      case 'min':\n      case 'mins':\n      case 'minute':\n      case 'minutes':\n        seconds += val * 60;\n        break;\n\n      case 'sec':\n      case 'secs':\n      case 'second':\n      case 'seconds':\n        seconds += val;\n        break;\n\n      default:\n        return {\n          status: 'error',\n          info: \"Invalid interval: '\".concat(interval, \"'\")\n        };\n    }\n  }\n\n  var milliseconds = seconds * 1000;\n\n  if (future) {\n    return {\n      status: 'success',\n      info: 'future',\n      result: new Date(now.valueOf() + milliseconds)\n    };\n  } else if (past) {\n    return {\n      status: 'success',\n      info: 'past',\n      result: new Date(now.valueOf() - milliseconds)\n    };\n  } else {\n    return {\n      status: 'success',\n      info: 'present',\n      result: new Date(now.valueOf())\n    };\n  }\n}\n/**\n * Determines whether an object matches a single key's constraints\n *\n * @param className\n * @param object\n * @param objects\n * @param key\n * @param constraints\n * @private\n * @returns {boolean}\n */\n\n\nfunction matchesKeyConstraints(className, object, objects, key, constraints) {\n  if (constraints === null) {\n    return false;\n  }\n\n  if ((0, _indexOf.default)(key).call(key, '.') >= 0) {\n    // Key references a subobject\n    var keyComponents = key.split('.');\n    var subObjectKey = keyComponents[0];\n    var keyRemainder = (0, _slice.default)(keyComponents).call(keyComponents, 1).join('.');\n    return matchesKeyConstraints(className, object[subObjectKey] || {}, objects, keyRemainder, constraints);\n  }\n\n  var i;\n\n  if (key === '$or') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (key === '$and') {\n    for (i = 0; i < constraints.length; i++) {\n      if (!matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (key === '$nor') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (key === '$relatedTo') {\n    // Bail! We can't handle relational queries locally\n    return false;\n  }\n\n  if (!/^[A-Za-z][0-9A-Za-z_]*$/.test(key)) {\n    throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid Key: \".concat(key));\n  } // Equality (or Array contains) cases\n\n\n  if ((0, _typeof2.default)(constraints) !== 'object') {\n    if ((0, _isArray.default)(object[key])) {\n      var _context;\n\n      return (0, _indexOf.default)(_context = object[key]).call(_context, constraints) > -1;\n    }\n\n    return object[key] === constraints;\n  }\n\n  var compareTo;\n\n  if (constraints.__type) {\n    if (constraints.__type === 'Pointer') {\n      return equalObjectsGeneric(object[key], constraints, function (obj, ptr) {\n        return typeof obj !== 'undefined' && ptr.className === obj.className && ptr.objectId === obj.objectId;\n      });\n    }\n\n    return equalObjectsGeneric(decode(object[key]), decode(constraints), equalObjects);\n  } // More complex cases\n\n\n  for (var condition in constraints) {\n    compareTo = constraints[condition];\n\n    if (compareTo.__type) {\n      compareTo = decode(compareTo);\n    } // is it a $relativeTime? convert to date\n\n\n    if (compareTo['$relativeTime']) {\n      var parserResult = relativeTimeToDate(compareTo['$relativeTime']);\n\n      if (parserResult.status !== 'success') {\n        var _context2;\n\n        throw new ParseError(ParseError.INVALID_JSON, (0, _concat.default)(_context2 = \"bad $relativeTime (\".concat(key, \") value. \")).call(_context2, parserResult.info));\n      }\n\n      compareTo = parserResult.result;\n    } // Compare Date Object or Date String\n\n\n    if (toString.call(compareTo) === '[object Date]' || typeof compareTo === 'string' && new Date(compareTo) !== 'Invalid Date' && !isNaN(new Date(compareTo))) {\n      object[key] = new Date(object[key].iso ? object[key].iso : object[key]);\n    }\n\n    switch (condition) {\n      case '$lt':\n        if (object[key] >= compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$lte':\n        if (object[key] > compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$gt':\n        if (object[key] <= compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$gte':\n        if (object[key] < compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$ne':\n        if (equalObjects(object[key], compareTo)) {\n          return false;\n        }\n\n        break;\n\n      case '$in':\n        if (!contains(compareTo, object[key])) {\n          return false;\n        }\n\n        break;\n\n      case '$nin':\n        if (contains(compareTo, object[key])) {\n          return false;\n        }\n\n        break;\n\n      case '$all':\n        for (i = 0; i < compareTo.length; i++) {\n          var _context3;\n\n          if ((0, _indexOf.default)(_context3 = object[key]).call(_context3, compareTo[i]) < 0) {\n            return false;\n          }\n        }\n\n        break;\n\n      case '$exists':\n        {\n          var propertyExists = typeof object[key] !== 'undefined';\n          var existenceIsRequired = constraints['$exists'];\n\n          if (typeof constraints['$exists'] !== 'boolean') {\n            // The SDK will never submit a non-boolean for $exists, but if someone\n            // tries to submit a non-boolean for $exits outside the SDKs, just ignore it.\n            break;\n          }\n\n          if (!propertyExists && existenceIsRequired || propertyExists && !existenceIsRequired) {\n            return false;\n          }\n\n          break;\n        }\n\n      case '$regex':\n        {\n          if ((0, _typeof2.default)(compareTo) === 'object') {\n            return compareTo.test(object[key]);\n          } // JS doesn't support perl-style escaping\n\n\n          var expString = '';\n          var escapeEnd = -2;\n          var escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q');\n\n          while (escapeStart > -1) {\n            // Add the unescaped portion\n            expString += compareTo.substring(escapeEnd + 2, escapeStart);\n            escapeEnd = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\E', escapeStart);\n\n            if (escapeEnd > -1) {\n              expString += compareTo.substring(escapeStart + 2, escapeEnd).replace(/\\\\\\\\\\\\\\\\E/g, '\\\\E').replace(/\\W/g, '\\\\$&');\n            }\n\n            escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q', escapeEnd);\n          }\n\n          expString += compareTo.substring(Math.max(escapeStart, escapeEnd + 2));\n          var modifiers = constraints.$options || '';\n          modifiers = modifiers.replace('x', '').replace('s', ''); // Parse Server / Mongo support x and s modifiers but JS RegExp doesn't\n\n          var exp = new RegExp(expString, modifiers);\n\n          if (!exp.test(object[key])) {\n            return false;\n          }\n\n          break;\n        }\n\n      case '$nearSphere':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n\n          var distance = compareTo.radiansTo(object[key]);\n          var max = constraints.$maxDistance || Infinity;\n          return distance <= max;\n        }\n\n      case '$within':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n\n          var southWest = compareTo.$box[0];\n          var northEast = compareTo.$box[1];\n\n          if (southWest.latitude > northEast.latitude || southWest.longitude > northEast.longitude) {\n            // Invalid box, crosses the date line\n            return false;\n          }\n\n          return object[key].latitude > southWest.latitude && object[key].latitude < northEast.latitude && object[key].longitude > southWest.longitude && object[key].longitude < northEast.longitude;\n        }\n\n      case '$options':\n        // Not a query type, but a way to add options to $regex. Ignore and\n        // avoid the default\n        break;\n\n      case '$maxDistance':\n        // Not a query type, but a way to add a cap to $nearSphere. Ignore and\n        // avoid the default\n        break;\n\n      case '$select':\n        {\n          var subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n\n          for (var _i2 = 0; _i2 < subQueryObjects.length; _i2 += 1) {\n            var subObject = transformObject(subQueryObjects[_i2]);\n            return equalObjects(object[key], subObject[compareTo.key]);\n          }\n\n          return false;\n        }\n\n      case '$dontSelect':\n        {\n          var _subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n\n          for (var _i3 = 0; _i3 < _subQueryObjects.length; _i3 += 1) {\n            var _subObject = transformObject(_subQueryObjects[_i3]);\n\n            return !equalObjects(object[key], _subObject[compareTo.key]);\n          }\n\n          return false;\n        }\n\n      case '$inQuery':\n        {\n          var _subQueryObjects2 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n\n          for (var _i4 = 0; _i4 < _subQueryObjects2.length; _i4 += 1) {\n            var _subObject2 = transformObject(_subQueryObjects2[_i4]);\n\n            if (object[key].className === _subObject2.className && object[key].objectId === _subObject2.objectId) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n      case '$notInQuery':\n        {\n          var _subQueryObjects3 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n\n          for (var _i5 = 0; _i5 < _subQueryObjects3.length; _i5 += 1) {\n            var _subObject3 = transformObject(_subQueryObjects3[_i5]);\n\n            if (object[key].className === _subObject3.className && object[key].objectId === _subObject3.objectId) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n      case '$containedBy':\n        {\n          var _iterator = _createForOfIteratorHelper(object[key]),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var value = _step.value;\n\n              if (!contains(compareTo, value)) {\n                return false;\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          return true;\n        }\n\n      case '$geoWithin':\n        {\n          var _context4;\n\n          var points = (0, _map.default)(_context4 = compareTo.$polygon).call(_context4, function (geoPoint) {\n            return [geoPoint.latitude, geoPoint.longitude];\n          });\n          var polygon = new ParsePolygon(points);\n          return polygon.containsPoint(object[key]);\n        }\n\n      case '$geoIntersects':\n        {\n          var _polygon = new ParsePolygon(object[key].coordinates);\n\n          var point = new ParseGeoPoint(compareTo.$point);\n          return _polygon.containsPoint(point);\n        }\n\n      default:\n        return false;\n    }\n  }\n\n  return true;\n}\n\nfunction validateQuery(query\n/*: any*/\n) {\n  var _context5;\n\n  var q = query;\n\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n\n  var specialQuerykeys = ['$and', '$or', '$nor', '_rperm', '_wperm', '_perishable_token', '_email_verify_token', '_email_verify_token_expires_at', '_account_lockout_expires_at', '_failed_login_count'];\n  (0, _forEach.default)(_context5 = (0, _keys.default)(q)).call(_context5, function (key) {\n    if (q && q[key] && q[key].$regex) {\n      if (typeof q[key].$options === 'string') {\n        if (!q[key].$options.match(/^[imxs]+$/)) {\n          throw new ParseError(ParseError.INVALID_QUERY, \"Bad $options value for query: \".concat(q[key].$options));\n        }\n      }\n    }\n\n    if ((0, _indexOf.default)(specialQuerykeys).call(specialQuerykeys, key) < 0 && !key.match(/^[a-zA-Z][a-zA-Z0-9_\\.]*$/)) {\n      throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid key name: \".concat(key));\n    }\n  });\n}\n\nvar OfflineQuery = {\n  matchesQuery: matchesQuery,\n  validateQuery: validateQuery\n};\nmodule.exports = OfflineQuery;"]},"metadata":{},"sourceType":"script"}