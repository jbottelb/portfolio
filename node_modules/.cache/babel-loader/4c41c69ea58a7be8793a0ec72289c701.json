{"ast":null,"code":"var _jsxFileName = \"/home/phy/portfolio/src/Components/MessageBoard/messages.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from \"react\";\nimport Message from \"./message.js\";\nimport { getMessages } from \"../../Services/phyapi.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Messages() {\n  _s();\n\n  const [messages, setMessages] = useState([]); // get form to fisplay by name\n\n  useEffect(() => {\n    if (messages && messages.length) {} else {\n      /*\n      axios.get(\"https://phyapi.herokuapp.com/messages\")\n      .then(res => {\n          setMessages(res.data);\n          console.log(res.data);\n      });\n      */\n      getMessages().then(data => {\n        setMessages(data);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"standatd\",\n    children: messages && messages.map(m => /*#__PURE__*/_jsxDEV(Message, {\n      name: m.name,\n      message: m.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Messages, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\n_c = Messages;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/home/phy/portfolio/src/Components/MessageBoard/messages.js"],"names":["React","useEffect","useState","Message","getMessages","axios","Messages","messages","setMessages","length","then","data","map","m","name","message"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC,CAD+B,CAGjC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,QAAQ,IAAIA,QAAQ,CAACE,MAAzB,EACA,CAEC,CAHD,MAIK;AACD;AACV;AACA;AACA;AACA;AACA;AACA;AACUL,MAAAA,WAAW,GAAGM,IAAd,CACKC,IAAD,IAAU;AACNH,QAAAA,WAAW,CAACG,IAAD,CAAX;AACH,OAHL;AAMD;AACN,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBACI;AAAK,IAAA,KAAK,EAAC,UAAX;AAAA,cAEIJ,QAAQ,IAAIA,QAAQ,CAACK,GAAT,CAAcC,CAAD,iBACvB,QAAC,OAAD;AAAS,MAAA,IAAI,EAAEA,CAAC,CAACC,IAAjB;AAAuB,MAAA,OAAO,EAAED,CAAC,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,YADU;AAFhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAUD;;GApCuBT,Q;;KAAAA,Q;AAoCvB","sourcesContent":["import React from 'react';\nimport { useEffect, useState } from \"react\";\nimport Message from \"./message.js\";\nimport { getMessages } from \"../../Services/phyapi.js\";\nimport axios from \"axios\";\n\nexport default function Messages() {\n    const [messages, setMessages] = useState([]);\n\n  // get form to fisplay by name\n  useEffect(() => {\n      if (messages && messages.length )\n      {\n\n      }\n      else {\n          /*\n          axios.get(\"https://phyapi.herokuapp.com/messages\")\n          .then(res => {\n              setMessages(res.data);\n              console.log(res.data);\n          });\n          */\n          getMessages().then(\n              (data) => {\n                  setMessages(data);\n              }\n          )\n\n        }\n  }, []);\n\n  return (\n      <div class=\"standatd\">\n      {\n          messages && messages.map((m) => (\n            <Message name={m.name} message={m.message}/>\n          )\n      )\n      }\n      </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}