{"ast":null,"code":"var _jsxFileName = \"/home/phy/portfolio/src/Components/MessageBoard/messages.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport Message from \"./message.js\";\nimport { getMessages } from \"../../Services/phyapi.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Messages = () => {\n  _s();\n\n  // get form to fisplay by name\n  useEffect(() => {\n    GetForm(groupName).then(forms => {\n      setForm(forms[0].toJSON());\n      console.log(form);\n    });\n  }, [form, groupName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Form Name: \", groupName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: form.data && form.data.map(award => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [award.award, /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: award.candidates.map(candidate => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [candidate.name, \": \", candidate.votes]\n              }, candidate.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 19\n            }, this)]\n          }, award.award, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this)\n        }, award.award, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this)\n      }, award.award, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Messages, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Messages;\nexport default Messages;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"sources":["/home/phy/portfolio/src/Components/MessageBoard/messages.js"],"names":["React","Component","Message","getMessages","Messages","useEffect","GetForm","groupName","then","forms","setForm","toJSON","console","log","form","data","map","award","candidates","candidate","name","votes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,WAAT,QAA4B,0BAA5B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,OAAO,CAACC,SAAD,CAAP,CAAmBC,IAAnB,CAAyBC,KAAD,IAAW;AACjCC,MAAAA,OAAO,CAACD,KAAK,CAAC,CAAD,CAAL,CAASE,MAAT,EAAD,CAAP;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD,KAHD;AAID,GALQ,EAKN,CAACA,IAAD,EAAOP,SAAP,CALM,CAAT;AAOA,sBACE;AAAA,4BACE;AAAA,gCAAgBA,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBACGO,IAAI,CAACC,IAAL,IACCD,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAeC,KAAD,iBACZ;AAAA,+BACE;AAAA,iCACE;AAAA,uBACGA,KAAK,CAACA,KADT,eAEE;AAAA,wBACGA,KAAK,CAACC,UAAN,CAAiBF,GAAjB,CAAsBG,SAAD,iBACpB;AAAA,2BACGA,SAAS,CAACC,IADb,QACqBD,SAAS,CAACE,KAD/B;AAAA,iBAASF,SAAS,CAACC,IAAnB;AAAA;AAAA;AAAA;AAAA,sBADD;AADH;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,aAASH,KAAK,CAACA,KAAf;AAAA;AAAA;AAAA;AAAA;AADF,WAAWA,KAAK,CAACA,KAAjB;AAAA;AAAA;AAAA;AAAA;AADF,SAAUA,KAAK,CAACA,KAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAlCD;;GAAMb,Q;;KAAAA,Q;AAmCN,eAAeA,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Message from \"./message.js\";\nimport { getMessages } from \"../../Services/phyapi.js\";\n\nconst Messages = () => {\n\n  // get form to fisplay by name\n  useEffect(() => {\n    GetForm(groupName).then((forms) => {\n      setForm(forms[0].toJSON());\n      console.log(form);\n    });\n  }, [form, groupName]);\n\n  return (\n    <div>\n      <h2>Form Name: {groupName}</h2>\n      <ul>\n        {form.data &&\n          form.data.map((award) => (\n            <div key={award.award}>\n              <span key={award.award}>\n                <li key={award.award}>\n                  {award.award}\n                  <ul>\n                    {award.candidates.map((candidate) => (\n                      <li key={candidate.name}>\n                        {candidate.name}: {candidate.votes}\n                      </li>\n                    ))}\n                  </ul>\n                </li>\n              </span>\n            </div>\n          ))}\n      </ul>\n    </div>\n  );\n};\nexport default Messages;\n"]},"metadata":{},"sourceType":"module"}