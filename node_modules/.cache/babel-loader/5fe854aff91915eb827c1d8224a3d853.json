{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _find = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/find\"));\n\nvar _setInterval2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/set-interval\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/toConsumableArray\"));\n\nvar _findIndex = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/find-index\"));\n\nvar _splice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/splice\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\n/**\n * https://github.com/francimedia/parse-js-local-storage\n *\n * @flow\n */\n\n\nvar QUEUE_KEY = 'Parse/Eventually/Queue';\nvar queueCache = [];\nvar dirtyCache = true;\nvar polling = undefined;\n/**\n * Provides utility functions to queue objects that will be\n * saved to the server at a later date.\n *\n * @class Parse.EventuallyQueue\n * @static\n */\n\nvar EventuallyQueue = {\n  /**\n   * Add object to queue with save operation.\n   *\n   * @function save\n   * @name Parse.EventuallyQueue.save\n   * @param {ParseObject} object Parse.Object to be saved eventually\n   * @param {object} [serverOptions] See {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.Object.html#save Parse.Object.save} options.\n   * @returns {Promise} A promise that is fulfilled if object is added to queue.\n   * @static\n   * @see Parse.Object#saveEventually\n   */\n  save: function (object\n  /*: ParseObject*/\n  )\n  /*: Promise*/\n  {\n    var serverOptions\n    /*: SaveOptions*/\n    = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.enqueue('save', object, serverOptions);\n  },\n\n  /**\n   * Add object to queue with save operation.\n   *\n   * @function destroy\n   * @name Parse.EventuallyQueue.destroy\n   * @param {ParseObject} object Parse.Object to be destroyed eventually\n   * @param {object} [serverOptions] See {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.Object.html#destroy Parse.Object.destroy} options\n   * @returns {Promise} A promise that is fulfilled if object is added to queue.\n   * @static\n   * @see Parse.Object#destroyEventually\n   */\n  destroy: function (object\n  /*: ParseObject*/\n  )\n  /*: Promise*/\n  {\n    var serverOptions\n    /*: RequestOptions*/\n    = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.enqueue('destroy', object, serverOptions);\n  },\n\n  /**\n   * Generate unique identifier to avoid duplicates and maintain previous state.\n   *\n   * @param {string} action save / destroy\n   * @param {object} object Parse.Object to be queued\n   * @returns {string}\n   * @static\n   * @ignore\n   */\n  generateQueueId: function (action\n  /*: string*/\n  , object\n  /*: ParseObject*/\n  )\n  /*: string*/\n  {\n    object._getId();\n\n    var className = object.className,\n        id = object.id,\n        _localId = object._localId;\n\n    var uniqueId = object.get('hash') || _localId;\n\n    return [action, className, id, uniqueId].join('_');\n  },\n\n  /**\n   * Build queue object and add to queue.\n   *\n   * @param {string} action save / destroy\n   * @param {object} object Parse.Object to be queued\n   * @param {object} [serverOptions]\n   * @returns {Promise} A promise that is fulfilled if object is added to queue.\n   * @static\n   * @ignore\n   */\n  enqueue: function (action\n  /*: string*/\n  , object\n  /*: ParseObject*/\n  , serverOptions\n  /*: SaveOptions | RequestOptions*/\n  )\n  /*: Promise*/\n  {\n    var _this = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n      var queueData, queueId, index, prop;\n      return _regenerator.default.wrap(function (_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.getQueue();\n\n            case 2:\n              queueData = _context.sent;\n              queueId = _this.generateQueueId(action, object);\n              index = _this.queueItemExists(queueData, queueId);\n\n              if (index > -1) {\n                // Add cached values to new object if they don't exist\n                for (prop in queueData[index].object) {\n                  if (typeof object.get(prop) === 'undefined') {\n                    object.set(prop, queueData[index].object[prop]);\n                  }\n                }\n              } else {\n                index = queueData.length;\n              }\n\n              queueData[index] = {\n                queueId: queueId,\n                action: action,\n                object: object.toJSON(),\n                serverOptions: serverOptions,\n                id: object.id,\n                className: object.className,\n                hash: object.get('hash'),\n                createdAt: new Date()\n              };\n              return _context.abrupt(\"return\", _this.setQueue(queueData));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  store: function (data) {\n    return _Storage.default.setItemAsync(QUEUE_KEY, (0, _stringify.default)(data));\n  },\n  load: function () {\n    return _Storage.default.getItemAsync(QUEUE_KEY);\n  },\n\n  /**\n   * Sets the in-memory queue from local storage and returns.\n   *\n   * @function getQueue\n   * @name Parse.EventuallyQueue.getQueue\n   * @returns {Promise<Array>}\n   * @static\n   */\n  getQueue: function ()\n  /*: Promise<Array>*/\n  {\n    var _this2 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {\n      return _regenerator.default.wrap(function (_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!dirtyCache) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.t0 = JSON;\n              _context2.next = 4;\n              return _this2.load();\n\n            case 4:\n              _context2.t1 = _context2.sent;\n\n              if (_context2.t1) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.t1 = '[]';\n\n            case 7:\n              _context2.t2 = _context2.t1;\n              queueCache = _context2.t0.parse.call(_context2.t0, _context2.t2);\n              dirtyCache = false;\n\n            case 10:\n              return _context2.abrupt(\"return\", queueCache);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n\n  /**\n   * Saves the queue to local storage\n   *\n   * @param {Queue} queue Queue containing Parse.Object data.\n   * @returns {Promise} A promise that is fulfilled when queue is stored.\n   * @static\n   * @ignore\n   */\n  setQueue: function (queue\n  /*: Queue*/\n  )\n  /*: Promise<void>*/\n  {\n    queueCache = queue;\n    return this.store(queueCache);\n  },\n\n  /**\n   * Removes Parse.Object data from queue.\n   *\n   * @param {string} queueId Unique identifier for Parse.Object data.\n   * @returns {Promise} A promise that is fulfilled when queue is stored.\n   * @static\n   * @ignore\n   */\n  remove: function (queueId\n  /*: string*/\n  )\n  /*: Promise<void>*/\n  {\n    var _this3 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {\n      var queueData, index;\n      return _regenerator.default.wrap(function (_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this3.getQueue();\n\n            case 2:\n              queueData = _context3.sent;\n              index = _this3.queueItemExists(queueData, queueId);\n\n              if (!(index > -1)) {\n                _context3.next = 8;\n                break;\n              }\n\n              (0, _splice.default)(queueData).call(queueData, index, 1);\n              _context3.next = 8;\n              return _this3.setQueue(queueData);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n\n  /**\n   * Removes all objects from queue.\n   *\n   * @function clear\n   * @name Parse.EventuallyQueue.clear\n   * @returns {Promise} A promise that is fulfilled when queue is cleared.\n   * @static\n   */\n  clear: function ()\n  /*: Promise*/\n  {\n    queueCache = [];\n    return this.store([]);\n  },\n\n  /**\n   * Return the index of a queueId in the queue. Returns -1 if not found.\n   *\n   * @param {Queue} queue Queue containing Parse.Object data.\n   * @param {string} queueId Unique identifier for Parse.Object data.\n   * @returns {number}\n   * @static\n   * @ignore\n   */\n  queueItemExists: function (queue\n  /*: Queue*/\n  , queueId\n  /*: string*/\n  )\n  /*: number*/\n  {\n    return (0, _findIndex.default)(queue).call(queue, function (data) {\n      return data.queueId === queueId;\n    });\n  },\n\n  /**\n   * Return the number of objects in the queue.\n   *\n   * @function length\n   * @name Parse.EventuallyQueue.length\n   * @returns {number}\n   * @static\n   */\n  length: function ()\n  /*: number*/\n  {\n    var _this4 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4() {\n      var queueData;\n      return _regenerator.default.wrap(function (_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _this4.getQueue();\n\n            case 2:\n              queueData = _context4.sent;\n              return _context4.abrupt(\"return\", queueData.length);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n\n  /**\n   * Sends the queue to the server.\n   *\n   * @function sendQueue\n   * @name Parse.EventuallyQueue.sendQueue\n   * @returns {Promise<boolean>} Returns true if queue was sent successfully.\n   * @static\n   */\n  sendQueue: function ()\n  /*: Promise<boolean>*/\n  {\n    var _this5 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5() {\n      var queue, queueData, i, queueObject, id, hash, className, ObjectType;\n      return _regenerator.default.wrap(function (_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _this5.getQueue();\n\n            case 2:\n              queue = _context5.sent;\n              queueData = (0, _toConsumableArray2.default)(queue);\n\n              if (!(queueData.length === 0)) {\n                _context5.next = 6;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", false);\n\n            case 6:\n              i = 0;\n\n            case 7:\n              if (!(i < queueData.length)) {\n                _context5.next = 26;\n                break;\n              }\n\n              queueObject = queueData[i];\n              id = queueObject.id, hash = queueObject.hash, className = queueObject.className;\n              ObjectType = _ParseObject.default.extend(className);\n\n              if (!id) {\n                _context5.next = 16;\n                break;\n              }\n\n              _context5.next = 14;\n              return _this5.process.byId(ObjectType, queueObject);\n\n            case 14:\n              _context5.next = 23;\n              break;\n\n            case 16:\n              if (!hash) {\n                _context5.next = 21;\n                break;\n              }\n\n              _context5.next = 19;\n              return _this5.process.byHash(ObjectType, queueObject);\n\n            case 19:\n              _context5.next = 23;\n              break;\n\n            case 21:\n              _context5.next = 23;\n              return _this5.process.create(ObjectType, queueObject);\n\n            case 23:\n              i += 1;\n              _context5.next = 7;\n              break;\n\n            case 26:\n              return _context5.abrupt(\"return\", true);\n\n            case 27:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n\n  /**\n   * Build queue object and add to queue.\n   *\n   * @param {ParseObject} object Parse.Object to be processed\n   * @param {QueueObject} queueObject Parse.Object data from the queue\n   * @returns {Promise} A promise that is fulfilled when operation is performed.\n   * @static\n   * @ignore\n   */\n  sendQueueCallback: function (object\n  /*: ParseObject*/\n  , queueObject\n  /*: QueueObject*/\n  )\n  /*: Promise<void>*/\n  {\n    var _this6 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6() {\n      return _regenerator.default.wrap(function (_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (object) {\n                _context6.next = 2;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", _this6.remove(queueObject.queueId));\n\n            case 2:\n              _context6.t0 = queueObject.action;\n              _context6.next = _context6.t0 === 'save' ? 5 : _context6.t0 === 'destroy' ? 20 : 33;\n              break;\n\n            case 5:\n              if (!(typeof object.updatedAt !== 'undefined' && object.updatedAt > new Date(queueObject.object.createdAt))) {\n                _context6.next = 7;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", _this6.remove(queueObject.queueId));\n\n            case 7:\n              _context6.prev = 7;\n              _context6.next = 10;\n              return object.save(queueObject.object, queueObject.serverOptions);\n\n            case 10:\n              _context6.next = 12;\n              return _this6.remove(queueObject.queueId);\n\n            case 12:\n              _context6.next = 19;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t1 = _context6[\"catch\"](7);\n\n              if (!(_context6.t1.message !== 'XMLHttpRequest failed: \"Unable to connect to the Parse API\"')) {\n                _context6.next = 19;\n                break;\n              }\n\n              _context6.next = 19;\n              return _this6.remove(queueObject.queueId);\n\n            case 19:\n              return _context6.abrupt(\"break\", 33);\n\n            case 20:\n              _context6.prev = 20;\n              _context6.next = 23;\n              return object.destroy(queueObject.serverOptions);\n\n            case 23:\n              _context6.next = 25;\n              return _this6.remove(queueObject.queueId);\n\n            case 25:\n              _context6.next = 32;\n              break;\n\n            case 27:\n              _context6.prev = 27;\n              _context6.t2 = _context6[\"catch\"](20);\n\n              if (!(_context6.t2.message !== 'XMLHttpRequest failed: \"Unable to connect to the Parse API\"')) {\n                _context6.next = 32;\n                break;\n              }\n\n              _context6.next = 32;\n              return _this6.remove(queueObject.queueId);\n\n            case 32:\n              return _context6.abrupt(\"break\", 33);\n\n            case 33:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[7, 14], [20, 27]]);\n    }))();\n  },\n\n  /**\n   * Start polling server for network connection.\n   * Will send queue if connection is established.\n   *\n   * @function poll\n   * @name Parse.EventuallyQueue.poll\n   * @param [ms] Milliseconds to ping the server. Default 2000ms\n   * @static\n   */\n  poll: function () {\n    var _this7 = this;\n\n    var ms\n    /*: number*/\n    = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2000;\n\n    if (polling) {\n      return;\n    }\n\n    polling = (0, _setInterval2.default)(function () {\n      var RESTController = _CoreManager.default.getRESTController();\n\n      RESTController.request('GET', 'health').then(function (_ref) {\n        var status = _ref.status;\n\n        if (status === 'ok') {\n          _this7.stopPoll();\n\n          return _this7.sendQueue();\n        }\n      }).catch(function (e) {\n        return e;\n      });\n    }, ms);\n  },\n\n  /**\n   * Turns off polling.\n   *\n   * @function stopPoll\n   * @name Parse.EventuallyQueue.stopPoll\n   * @static\n   */\n  stopPoll: function () {\n    clearInterval(polling);\n    polling = undefined;\n  },\n\n  /**\n   * Return true if pinging the server.\n   *\n   * @function isPolling\n   * @name Parse.EventuallyQueue.isPolling\n   * @returns {boolean}\n   * @static\n   */\n  isPolling: function ()\n  /*: boolean*/\n  {\n    return !!polling;\n  },\n  _setPolling: function (flag\n  /*: boolean*/\n  ) {\n    polling = flag;\n  },\n  process: {\n    create: function (ObjectType, queueObject) {\n      var object = new ObjectType();\n      return EventuallyQueue.sendQueueCallback(object, queueObject);\n    },\n    byId: function (ObjectType, queueObject) {\n      return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7() {\n        var sessionToken, query, results;\n        return _regenerator.default.wrap(function (_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                sessionToken = queueObject.serverOptions.sessionToken;\n                query = new _ParseQuery.default(ObjectType);\n                query.equalTo('objectId', queueObject.id);\n                _context7.next = 5;\n                return (0, _find.default)(query).call(query, {\n                  sessionToken: sessionToken\n                });\n\n              case 5:\n                results = _context7.sent;\n                return _context7.abrupt(\"return\", EventuallyQueue.sendQueueCallback(results[0], queueObject));\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    },\n    byHash: function (ObjectType, queueObject) {\n      return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8() {\n        var sessionToken, query, results;\n        return _regenerator.default.wrap(function (_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                sessionToken = queueObject.serverOptions.sessionToken;\n                query = new _ParseQuery.default(ObjectType);\n                query.equalTo('hash', queueObject.hash);\n                _context8.next = 5;\n                return (0, _find.default)(query).call(query, {\n                  sessionToken: sessionToken\n                });\n\n              case 5:\n                results = _context8.sent;\n\n                if (!(results.length > 0)) {\n                  _context8.next = 8;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", EventuallyQueue.sendQueueCallback(results[0], queueObject));\n\n              case 8:\n                return _context8.abrupt(\"return\", EventuallyQueue.process.create(ObjectType, queueObject));\n\n              case 9:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  }\n};\nmodule.exports = EventuallyQueue;","map":{"version":3,"sources":["/home/phy/portfolio/node_modules/parse/lib/browser/EventuallyQueue.js"],"names":["_interopRequireDefault","require","_find","_setInterval2","_toConsumableArray2","_findIndex","_splice","_stringify","_regenerator","_asyncToGenerator2","_CoreManager","_ParseObject","_ParseQuery","_Storage","QUEUE_KEY","queueCache","dirtyCache","polling","undefined","EventuallyQueue","save","object","serverOptions","arguments","length","enqueue","destroy","generateQueueId","action","_getId","className","id","_localId","uniqueId","get","join","_this","default","mark","_callee","queueData","queueId","index","prop","wrap","_context","prev","next","getQueue","sent","queueItemExists","set","toJSON","hash","createdAt","Date","abrupt","setQueue","stop","store","data","setItemAsync","load","getItemAsync","_this2","_callee2","_context2","t0","JSON","t1","t2","parse","call","queue","remove","_this3","_callee3","_context3","clear","_this4","_callee4","_context4","sendQueue","_this5","_callee5","i","queueObject","ObjectType","_context5","extend","process","byId","byHash","create","sendQueueCallback","_this6","_callee6","_context6","updatedAt","message","poll","_this7","ms","RESTController","getRESTController","request","then","_ref","status","stopPoll","catch","e","clearInterval","isPolling","_setPolling","flag","_callee7","sessionToken","query","results","_context7","equalTo","_callee8","_context8","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _find = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/find\"));\n\nvar _setInterval2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/set-interval\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/toConsumableArray\"));\n\nvar _findIndex = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/find-index\"));\n\nvar _splice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/splice\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\n/**\n * https://github.com/francimedia/parse-js-local-storage\n *\n * @flow\n */\n\n\nvar QUEUE_KEY = 'Parse/Eventually/Queue';\nvar queueCache = [];\nvar dirtyCache = true;\nvar polling = undefined;\n/**\n * Provides utility functions to queue objects that will be\n * saved to the server at a later date.\n *\n * @class Parse.EventuallyQueue\n * @static\n */\n\nvar EventuallyQueue = {\n  /**\n   * Add object to queue with save operation.\n   *\n   * @function save\n   * @name Parse.EventuallyQueue.save\n   * @param {ParseObject} object Parse.Object to be saved eventually\n   * @param {object} [serverOptions] See {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.Object.html#save Parse.Object.save} options.\n   * @returns {Promise} A promise that is fulfilled if object is added to queue.\n   * @static\n   * @see Parse.Object#saveEventually\n   */\n  save: function (object\n  /*: ParseObject*/\n  )\n  /*: Promise*/\n  {\n    var serverOptions\n    /*: SaveOptions*/\n    = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.enqueue('save', object, serverOptions);\n  },\n\n  /**\n   * Add object to queue with save operation.\n   *\n   * @function destroy\n   * @name Parse.EventuallyQueue.destroy\n   * @param {ParseObject} object Parse.Object to be destroyed eventually\n   * @param {object} [serverOptions] See {@link https://parseplatform.org/Parse-SDK-JS/api/master/Parse.Object.html#destroy Parse.Object.destroy} options\n   * @returns {Promise} A promise that is fulfilled if object is added to queue.\n   * @static\n   * @see Parse.Object#destroyEventually\n   */\n  destroy: function (object\n  /*: ParseObject*/\n  )\n  /*: Promise*/\n  {\n    var serverOptions\n    /*: RequestOptions*/\n    = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return this.enqueue('destroy', object, serverOptions);\n  },\n\n  /**\n   * Generate unique identifier to avoid duplicates and maintain previous state.\n   *\n   * @param {string} action save / destroy\n   * @param {object} object Parse.Object to be queued\n   * @returns {string}\n   * @static\n   * @ignore\n   */\n  generateQueueId: function (action\n  /*: string*/\n  , object\n  /*: ParseObject*/\n  )\n  /*: string*/\n  {\n    object._getId();\n\n    var className = object.className,\n        id = object.id,\n        _localId = object._localId;\n\n    var uniqueId = object.get('hash') || _localId;\n\n    return [action, className, id, uniqueId].join('_');\n  },\n\n  /**\n   * Build queue object and add to queue.\n   *\n   * @param {string} action save / destroy\n   * @param {object} object Parse.Object to be queued\n   * @param {object} [serverOptions]\n   * @returns {Promise} A promise that is fulfilled if object is added to queue.\n   * @static\n   * @ignore\n   */\n  enqueue: function (action\n  /*: string*/\n  , object\n  /*: ParseObject*/\n  , serverOptions\n  /*: SaveOptions | RequestOptions*/\n  )\n  /*: Promise*/\n  {\n    var _this = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n      var queueData, queueId, index, prop;\n      return _regenerator.default.wrap(function (_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.getQueue();\n\n            case 2:\n              queueData = _context.sent;\n              queueId = _this.generateQueueId(action, object);\n              index = _this.queueItemExists(queueData, queueId);\n\n              if (index > -1) {\n                // Add cached values to new object if they don't exist\n                for (prop in queueData[index].object) {\n                  if (typeof object.get(prop) === 'undefined') {\n                    object.set(prop, queueData[index].object[prop]);\n                  }\n                }\n              } else {\n                index = queueData.length;\n              }\n\n              queueData[index] = {\n                queueId: queueId,\n                action: action,\n                object: object.toJSON(),\n                serverOptions: serverOptions,\n                id: object.id,\n                className: object.className,\n                hash: object.get('hash'),\n                createdAt: new Date()\n              };\n              return _context.abrupt(\"return\", _this.setQueue(queueData));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  store: function (data) {\n    return _Storage.default.setItemAsync(QUEUE_KEY, (0, _stringify.default)(data));\n  },\n  load: function () {\n    return _Storage.default.getItemAsync(QUEUE_KEY);\n  },\n\n  /**\n   * Sets the in-memory queue from local storage and returns.\n   *\n   * @function getQueue\n   * @name Parse.EventuallyQueue.getQueue\n   * @returns {Promise<Array>}\n   * @static\n   */\n  getQueue: function ()\n  /*: Promise<Array>*/\n  {\n    var _this2 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2() {\n      return _regenerator.default.wrap(function (_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!dirtyCache) {\n                _context2.next = 10;\n                break;\n              }\n\n              _context2.t0 = JSON;\n              _context2.next = 4;\n              return _this2.load();\n\n            case 4:\n              _context2.t1 = _context2.sent;\n\n              if (_context2.t1) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.t1 = '[]';\n\n            case 7:\n              _context2.t2 = _context2.t1;\n              queueCache = _context2.t0.parse.call(_context2.t0, _context2.t2);\n              dirtyCache = false;\n\n            case 10:\n              return _context2.abrupt(\"return\", queueCache);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n\n  /**\n   * Saves the queue to local storage\n   *\n   * @param {Queue} queue Queue containing Parse.Object data.\n   * @returns {Promise} A promise that is fulfilled when queue is stored.\n   * @static\n   * @ignore\n   */\n  setQueue: function (queue\n  /*: Queue*/\n  )\n  /*: Promise<void>*/\n  {\n    queueCache = queue;\n    return this.store(queueCache);\n  },\n\n  /**\n   * Removes Parse.Object data from queue.\n   *\n   * @param {string} queueId Unique identifier for Parse.Object data.\n   * @returns {Promise} A promise that is fulfilled when queue is stored.\n   * @static\n   * @ignore\n   */\n  remove: function (queueId\n  /*: string*/\n  )\n  /*: Promise<void>*/\n  {\n    var _this3 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3() {\n      var queueData, index;\n      return _regenerator.default.wrap(function (_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this3.getQueue();\n\n            case 2:\n              queueData = _context3.sent;\n              index = _this3.queueItemExists(queueData, queueId);\n\n              if (!(index > -1)) {\n                _context3.next = 8;\n                break;\n              }\n\n              (0, _splice.default)(queueData).call(queueData, index, 1);\n              _context3.next = 8;\n              return _this3.setQueue(queueData);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n\n  /**\n   * Removes all objects from queue.\n   *\n   * @function clear\n   * @name Parse.EventuallyQueue.clear\n   * @returns {Promise} A promise that is fulfilled when queue is cleared.\n   * @static\n   */\n  clear: function ()\n  /*: Promise*/\n  {\n    queueCache = [];\n    return this.store([]);\n  },\n\n  /**\n   * Return the index of a queueId in the queue. Returns -1 if not found.\n   *\n   * @param {Queue} queue Queue containing Parse.Object data.\n   * @param {string} queueId Unique identifier for Parse.Object data.\n   * @returns {number}\n   * @static\n   * @ignore\n   */\n  queueItemExists: function (queue\n  /*: Queue*/\n  , queueId\n  /*: string*/\n  )\n  /*: number*/\n  {\n    return (0, _findIndex.default)(queue).call(queue, function (data) {\n      return data.queueId === queueId;\n    });\n  },\n\n  /**\n   * Return the number of objects in the queue.\n   *\n   * @function length\n   * @name Parse.EventuallyQueue.length\n   * @returns {number}\n   * @static\n   */\n  length: function ()\n  /*: number*/\n  {\n    var _this4 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4() {\n      var queueData;\n      return _regenerator.default.wrap(function (_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _this4.getQueue();\n\n            case 2:\n              queueData = _context4.sent;\n              return _context4.abrupt(\"return\", queueData.length);\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n\n  /**\n   * Sends the queue to the server.\n   *\n   * @function sendQueue\n   * @name Parse.EventuallyQueue.sendQueue\n   * @returns {Promise<boolean>} Returns true if queue was sent successfully.\n   * @static\n   */\n  sendQueue: function ()\n  /*: Promise<boolean>*/\n  {\n    var _this5 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee5() {\n      var queue, queueData, i, queueObject, id, hash, className, ObjectType;\n      return _regenerator.default.wrap(function (_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _this5.getQueue();\n\n            case 2:\n              queue = _context5.sent;\n              queueData = (0, _toConsumableArray2.default)(queue);\n\n              if (!(queueData.length === 0)) {\n                _context5.next = 6;\n                break;\n              }\n\n              return _context5.abrupt(\"return\", false);\n\n            case 6:\n              i = 0;\n\n            case 7:\n              if (!(i < queueData.length)) {\n                _context5.next = 26;\n                break;\n              }\n\n              queueObject = queueData[i];\n              id = queueObject.id, hash = queueObject.hash, className = queueObject.className;\n              ObjectType = _ParseObject.default.extend(className);\n\n              if (!id) {\n                _context5.next = 16;\n                break;\n              }\n\n              _context5.next = 14;\n              return _this5.process.byId(ObjectType, queueObject);\n\n            case 14:\n              _context5.next = 23;\n              break;\n\n            case 16:\n              if (!hash) {\n                _context5.next = 21;\n                break;\n              }\n\n              _context5.next = 19;\n              return _this5.process.byHash(ObjectType, queueObject);\n\n            case 19:\n              _context5.next = 23;\n              break;\n\n            case 21:\n              _context5.next = 23;\n              return _this5.process.create(ObjectType, queueObject);\n\n            case 23:\n              i += 1;\n              _context5.next = 7;\n              break;\n\n            case 26:\n              return _context5.abrupt(\"return\", true);\n\n            case 27:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n\n  /**\n   * Build queue object and add to queue.\n   *\n   * @param {ParseObject} object Parse.Object to be processed\n   * @param {QueueObject} queueObject Parse.Object data from the queue\n   * @returns {Promise} A promise that is fulfilled when operation is performed.\n   * @static\n   * @ignore\n   */\n  sendQueueCallback: function (object\n  /*: ParseObject*/\n  , queueObject\n  /*: QueueObject*/\n  )\n  /*: Promise<void>*/\n  {\n    var _this6 = this;\n\n    return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee6() {\n      return _regenerator.default.wrap(function (_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (object) {\n                _context6.next = 2;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", _this6.remove(queueObject.queueId));\n\n            case 2:\n              _context6.t0 = queueObject.action;\n              _context6.next = _context6.t0 === 'save' ? 5 : _context6.t0 === 'destroy' ? 20 : 33;\n              break;\n\n            case 5:\n              if (!(typeof object.updatedAt !== 'undefined' && object.updatedAt > new Date(queueObject.object.createdAt))) {\n                _context6.next = 7;\n                break;\n              }\n\n              return _context6.abrupt(\"return\", _this6.remove(queueObject.queueId));\n\n            case 7:\n              _context6.prev = 7;\n              _context6.next = 10;\n              return object.save(queueObject.object, queueObject.serverOptions);\n\n            case 10:\n              _context6.next = 12;\n              return _this6.remove(queueObject.queueId);\n\n            case 12:\n              _context6.next = 19;\n              break;\n\n            case 14:\n              _context6.prev = 14;\n              _context6.t1 = _context6[\"catch\"](7);\n\n              if (!(_context6.t1.message !== 'XMLHttpRequest failed: \"Unable to connect to the Parse API\"')) {\n                _context6.next = 19;\n                break;\n              }\n\n              _context6.next = 19;\n              return _this6.remove(queueObject.queueId);\n\n            case 19:\n              return _context6.abrupt(\"break\", 33);\n\n            case 20:\n              _context6.prev = 20;\n              _context6.next = 23;\n              return object.destroy(queueObject.serverOptions);\n\n            case 23:\n              _context6.next = 25;\n              return _this6.remove(queueObject.queueId);\n\n            case 25:\n              _context6.next = 32;\n              break;\n\n            case 27:\n              _context6.prev = 27;\n              _context6.t2 = _context6[\"catch\"](20);\n\n              if (!(_context6.t2.message !== 'XMLHttpRequest failed: \"Unable to connect to the Parse API\"')) {\n                _context6.next = 32;\n                break;\n              }\n\n              _context6.next = 32;\n              return _this6.remove(queueObject.queueId);\n\n            case 32:\n              return _context6.abrupt(\"break\", 33);\n\n            case 33:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, null, [[7, 14], [20, 27]]);\n    }))();\n  },\n\n  /**\n   * Start polling server for network connection.\n   * Will send queue if connection is established.\n   *\n   * @function poll\n   * @name Parse.EventuallyQueue.poll\n   * @param [ms] Milliseconds to ping the server. Default 2000ms\n   * @static\n   */\n  poll: function () {\n    var _this7 = this;\n\n    var ms\n    /*: number*/\n    = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 2000;\n\n    if (polling) {\n      return;\n    }\n\n    polling = (0, _setInterval2.default)(function () {\n      var RESTController = _CoreManager.default.getRESTController();\n\n      RESTController.request('GET', 'health').then(function (_ref) {\n        var status = _ref.status;\n\n        if (status === 'ok') {\n          _this7.stopPoll();\n\n          return _this7.sendQueue();\n        }\n      }).catch(function (e) {\n        return e;\n      });\n    }, ms);\n  },\n\n  /**\n   * Turns off polling.\n   *\n   * @function stopPoll\n   * @name Parse.EventuallyQueue.stopPoll\n   * @static\n   */\n  stopPoll: function () {\n    clearInterval(polling);\n    polling = undefined;\n  },\n\n  /**\n   * Return true if pinging the server.\n   *\n   * @function isPolling\n   * @name Parse.EventuallyQueue.isPolling\n   * @returns {boolean}\n   * @static\n   */\n  isPolling: function ()\n  /*: boolean*/\n  {\n    return !!polling;\n  },\n  _setPolling: function (flag\n  /*: boolean*/\n  ) {\n    polling = flag;\n  },\n  process: {\n    create: function (ObjectType, queueObject) {\n      var object = new ObjectType();\n      return EventuallyQueue.sendQueueCallback(object, queueObject);\n    },\n    byId: function (ObjectType, queueObject) {\n      return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee7() {\n        var sessionToken, query, results;\n        return _regenerator.default.wrap(function (_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                sessionToken = queueObject.serverOptions.sessionToken;\n                query = new _ParseQuery.default(ObjectType);\n                query.equalTo('objectId', queueObject.id);\n                _context7.next = 5;\n                return (0, _find.default)(query).call(query, {\n                  sessionToken: sessionToken\n                });\n\n              case 5:\n                results = _context7.sent;\n                return _context7.abrupt(\"return\", EventuallyQueue.sendQueueCallback(results[0], queueObject));\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }))();\n    },\n    byHash: function (ObjectType, queueObject) {\n      return (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee8() {\n        var sessionToken, query, results;\n        return _regenerator.default.wrap(function (_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                sessionToken = queueObject.serverOptions.sessionToken;\n                query = new _ParseQuery.default(ObjectType);\n                query.equalTo('hash', queueObject.hash);\n                _context8.next = 5;\n                return (0, _find.default)(query).call(query, {\n                  sessionToken: sessionToken\n                });\n\n              case 5:\n                results = _context8.sent;\n\n                if (!(results.length > 0)) {\n                  _context8.next = 8;\n                  break;\n                }\n\n                return _context8.abrupt(\"return\", EventuallyQueue.sendQueueCallback(results[0], queueObject));\n\n              case 8:\n                return _context8.abrupt(\"return\", EventuallyQueue.process.create(ObjectType, queueObject));\n\n              case 9:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }))();\n    }\n  }\n};\nmodule.exports = EventuallyQueue;"]},"metadata":{},"sourceType":"script"}