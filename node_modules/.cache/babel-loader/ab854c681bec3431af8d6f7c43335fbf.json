{"ast":null,"code":"function promisifyRequest(request) {\n  return new Promise((resolve, reject) => {\n    // @ts-ignore - file size hacks\n    request.oncomplete = request.onsuccess = () => resolve(request.result); // @ts-ignore - file size hacks\n\n\n    request.onabort = request.onerror = () => reject(request.error);\n  });\n}\n\nfunction createStore(dbName, storeName) {\n  const request = indexedDB.open(dbName);\n\n  request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n\n  const dbp = promisifyRequest(request);\n  return (txMode, callback) => dbp.then(db => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\n\nlet defaultGetStoreFunc;\n\nfunction defaultGetStore() {\n  if (!defaultGetStoreFunc) {\n    defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n  }\n\n  return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction get(key, customStore = defaultGetStore()) {\n  return customStore('readonly', store => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction set(key, value, customStore = defaultGetStore()) {\n  return customStore('readwrite', store => {\n    store.put(value, key);\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic â€“ if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction setMany(entries, customStore = defaultGetStore()) {\n  return customStore('readwrite', store => {\n    entries.forEach(entry => store.put(entry[1], entry[0]));\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction getMany(keys, customStore = defaultGetStore()) {\n  return customStore('readonly', store => Promise.all(keys.map(key => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction update(key, updater, customStore = defaultGetStore()) {\n  return customStore('readwrite', store => // Need to create the promise manually.\n  // If I try to chain promises, the transaction closes in browsers\n  // that use a promise polyfill (IE10/11).\n  new Promise((resolve, reject) => {\n    store.get(key).onsuccess = function () {\n      try {\n        store.put(updater(this.result), key);\n        resolve(promisifyRequest(store.transaction));\n      } catch (err) {\n        reject(err);\n      }\n    };\n  }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction del(key, customStore = defaultGetStore()) {\n  return customStore('readwrite', store => {\n    store.delete(key);\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction clear(customStore = defaultGetStore()) {\n  return customStore('readwrite', store => {\n    store.clear();\n    return promisifyRequest(store.transaction);\n  });\n}\n\nfunction eachCursor(customStore, callback) {\n  return customStore('readonly', store => {\n    // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n    // And openKeyCursor isn't supported by Safari.\n    store.openCursor().onsuccess = function () {\n      if (!this.result) return;\n      callback(this.result);\n      this.result.continue();\n    };\n\n    return promisifyRequest(store.transaction);\n  });\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction keys(customStore = defaultGetStore()) {\n  const items = [];\n  return eachCursor(customStore, cursor => items.push(cursor.key)).then(() => items);\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction values(customStore = defaultGetStore()) {\n  const items = [];\n  return eachCursor(customStore, cursor => items.push(cursor.value)).then(() => items);\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\n\n\nfunction entries(customStore = defaultGetStore()) {\n  const items = [];\n  return eachCursor(customStore, cursor => items.push([cursor.key, cursor.value])).then(() => items);\n}\n\nexport { clear, createStore, del, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };","map":{"version":3,"sources":["/home/phy/portfolio/node_modules/idb-keyval/dist/esm/index.js"],"names":["promisifyRequest","request","Promise","resolve","reject","oncomplete","onsuccess","result","onabort","onerror","error","createStore","dbName","storeName","indexedDB","open","onupgradeneeded","createObjectStore","dbp","txMode","callback","then","db","transaction","objectStore","defaultGetStoreFunc","defaultGetStore","get","key","customStore","store","set","value","put","setMany","entries","forEach","entry","getMany","keys","all","map","update","updater","err","del","delete","clear","eachCursor","openCursor","continue","items","cursor","push","values"],"mappings":"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","sourcesContent":["function promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const dbp = promisifyRequest(request);\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic â€“ if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(customStore, callback) {\n    return customStore('readonly', (store) => {\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\n        // And openKeyCursor isn't supported by Safari.\n        store.openCursor().onsuccess = function () {\n            if (!this.result)\n                return;\n            callback(this.result);\n            this.result.continue();\n        };\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    const items = [];\n    return eachCursor(customStore, (cursor) => items.push(cursor.key)).then(() => items);\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    const items = [];\n    return eachCursor(customStore, (cursor) => items.push(cursor.value)).then(() => items);\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    const items = [];\n    return eachCursor(customStore, (cursor) => items.push([cursor.key, cursor.value])).then(() => items);\n}\n\nexport { clear, createStore, del, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n"]},"metadata":{},"sourceType":"module"}